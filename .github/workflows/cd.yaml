name: Deploy

on:
  push:
    branches: [ "main" ]

env:
  CHART_PATH: helm-helloworld/
  RELEASE_NAME: helm-helloworld
  NAMESPACE: default
  RELEASE_NAME_canary: hello-canary
  NAMESPACE_canary: canary

jobs:
  prepare:
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
                    
      - name: Helm tool installer
        uses: Azure/setup-helm@v3 

      - name: Print the Helm client version information
        run: helm version
        
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: projects/400645327499/locations/global/workloadIdentityPools/gitaction/providers/gitaction
          service_account: 'serviceaccount-test@trans-shuttle-401410.iam.gserviceaccount.com'
          audience: 'https://github.com/qpqpqp1224/test_cd'      
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Use gcloud CLI
        run: gcloud info
        
      - name: Install Google Cloud Auth plugin
        run: gcloud components install gke-gcloud-auth-plugin
      
      - name: Get Kubernetes config
        run: gcloud container clusters get-credentials test --region asia-northeast3 --project trans-shuttle-401410
      
      - name: Examine the chart for possible issues    
        run: helm lint ${{ env.CHART_PATH }}

      - name: create ns
        run: kubectl create namespace ${{ env.NAMESPACE_canary }}

      - name: "[MANIFESTS] Dry-run the release"
        run: |
          helm upgrade ${{ env.RELEASE_NAME_canary }} ${{ env.CHART_PATH }} \
             --namespace ${{ env.NAMESPACE_canary }} \
             --install
            # --dry-run

      - name: Check Rollout status
        run: kubectl rollout status deployment helloworld --namespace ${{ env.NAMESPACE }}

      - name: Check Rollout history
        run: kubectl rollout history deployment helloworld --namespace ${{ env.NAMESPACE }}

      - name: Check pod status
        run: kubectl get pod --namespace ${{ env.NAMESPACE_canary }} -o wide


  deploy:
    needs: prepare
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest
    environment: deployment

    steps:
      - uses: actions/checkout@v3
                    
      - name: Helm tool installer
        uses: Azure/setup-helm@v3 

      - name: Print the Helm client version information
        run: helm version

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: projects/400645327499/locations/global/workloadIdentityPools/gitaction/providers/gitaction
          service_account: 'serviceaccount-test@trans-shuttle-401410.iam.gserviceaccount.com'
          audience: 'https://github.com/qpqpqp1224/test_cd'   

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Install Google Cloud Auth plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get Kubernetes config
        run: gcloud container clusters get-credentials test --region asia-northeast3 --project trans-shuttle-401410
        
      - name: Examine the chart for possible issues          
        run: helm lint ${{ env.CHART_PATH }}

      - name: Upgrade the release
        run: |
          helm upgrade ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} \
          --namespace ${{ env.NAMESPACE }} \
          --install 

      - name: List the upgrade result
        run: helm list --filter ${{ env.RELEASE_NAME }} --namespace ${{ env.NAMESPACE }}

      #- name: Check Rollout status
      #  run: kubectl rollout status deployment helloworld --namespace ${{ env.NAMESPACE }}

      #- name: Check Rollout history
      #  run: kubectl rollout history deployment helloworld --namespace ${{ env.NAMESPACE }}

   #   - name: canary check
    #    run: curl -ks https://`kubectl get svc frontend -o=jsonpath="{.status.loadBalancer.ingress[0].ip}"`/version

      - name: Check pod status
        run: kubectl get pod --namespace ${{ env.NAMESPACE }} -o wide
